const now = new Date();
const starttime = new Date();
const hours = now.getHours();
const day = now.getDay();
const minute = now.getMinutes();
starttime.setHours(8);
starttime.setMinutes(0);

switch (day) {

  case 0:

    bot.sendMessage(chatid, 'üò¥ –°—å–æ–≥–æ–¥–Ω—ñ –Ω–µ–¥—ñ–ª—è. –ú–µ–¥–∏—á–Ω–∏–π —Ü–µ–Ω—Ç—Ä MTS Clinic - –∑–∞—á–∏–Ω–µ–Ω–æ.');
    break;
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
    if (hours < 17 && (now.getTime() >= starttime.getTime())) {

      bot.sendMessage(chatid, ('üëâ –ú–∏, –Ω–∞—Ä–∞–∑—ñ –≤—ñ–¥—á–∏–Ω–µ–Ω—ñ.\n–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ: 08:00 - 17:00\n                    \n–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ. \n–°–ø–ª–∞–Ω—É–π—Ç–µ –¥–æ—Ä–æ–≥—É –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –¥–æ –Ω–∞—Å. \n                 \n–ó–∞—Ä–∞–∑ ' + Math.ceil(data.main.temp) + ' ¬∞–° –≤ –º—ñ—Å—Ç—ñ ' + getweasher.city + ' \n–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫:  ' + Math.round(data.main.feels_like) + ' ¬∞–°' + '\n' + ((data.weather[0].description).charAt(0).toUpperCase() + (data.weather[0].description).slice(1))));



    } else {
      bot.sendMessage(chatid, 'üò≠–ú–∏, –Ω–∞—Ä–∞–∑—ñ –∑–∞—á–∏–Ω–µ–Ω—ñ. –ê–ª–µ, –í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –Ω–∞—à–∏–º–∏ –æ–Ω–ª–∞–π–Ω-–ø–æ—Å–ª—É–≥–∞–º–∏.‚òù');
    }
    break;

  case 6:
    if (hours < 15 && hours >= 8) {
      bot.sendMessage(chatid, ('üíâüî¨ü©∫üßë‚Äç‚öïÔ∏è\n–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ: 08:00 - 15:00\n–°–ø–ª–∞–Ω—É–π—Ç–µ –¥–æ—Ä–æ–≥—É –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –¥–æ –Ω–∞—Å.\n                 \n–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.\n–ó–∞—Ä–∞–∑ ' + Math.ceil(data.main.temp) + ' ¬∞–° –≤ –º—ñ—Å—Ç—ñ ' + getweasher.city + ' \n–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫:  ' + Math.round(data.main.feels_like) + ' ¬∞–°' + '\n' + ((data.weather[0].description).charAt(0).toUpperCase() + (data.weather[0].description).slice(1))));
    } else {
      bot.sendMessage(chatid, 'üò≠ –ú–∏, –Ω–∞—Ä–∞–∑—ñ –∑–∞—á–∏–Ω–µ–Ω—ñ. –ê–ª–µ, –í–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –Ω–∞—à–∏–º–∏ –æ–Ω–ª–∞–π–Ω-–ø–æ—Å–ª—É–≥–∞–º–∏.‚òù');
    }
    break;





}





async function weather(cityname) {
  try {
    const response = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${cityname}&limit=5&appid=29ebfe90e8a43cfb861bd842ed6ca6f8`);
    if (!response.ok) {
      throw new Error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ —Å–µ—Ä–≤—ñ—Å—É OpenWeatherMap. –°—Ç–∞—Ç—É—Å: ${response.status}`);
    }
    const data = await response.json();
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ –º—ñ—Å—Ç–æ)
    if (!Array.isArray(data) || data.length === 0) {
      throw new Error(`–ú—ñ—Å—Ç–æ "${cityname}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    }

    return Promise.resolve(data); // –ü–æ–≤–µ—Ä—Ç–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —É .then()
  } catch (error) {
    console.error(error);
    return Promise.reject(error);
  }
}

async function getWeather(city) {
  try {
    const weatherData = await weather(city);
    const getWeather = {
      latitude: weatherData[0].lat,
      longitude: weatherData[0].lon,
      city: weatherData[0].local_names.uk,
      appid: '29ebfe90e8a43cfb861bd842ed6ca6f8'
    };

    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${getWeather.latitude}&lon=${getWeather.longitude}&appid=${getWeather.appid}&units=metric&lang=ua`);
    
    if (!response.ok) {
      throw new Error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É –¥–æ —Å–µ—Ä–≤—ñ—Å—É OpenWeatherMap. –°—Ç–∞—Ç—É—Å: ${response.status}`);
    }

    const data = await response.json();

    return {
      temperature: Math.ceil(data.main.temp),
      feelsLike: Math.round(data.main.feels_like),
      description: (data.weather[0].description).charAt(0).toUpperCase() + (data.weather[0].description).slice(1)
    };
  } catch (error) {
    console.error(error);
    return Promise.reject(error);
  }
}

// –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
const cityname = '–ü—ñ—Å–æ—á–∏–Ω';
getWeather(cityname)
  .then(weatherInfo => {
    console.log(`–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ ${cityname}:`);
    console.log(`–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${weatherInfo.temperature} ¬∞C`);
    console.log(`–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: ${weatherInfo.feelsLike} ¬∞C`);
    console.log(`–û–ø–∏—Å: ${weatherInfo.description}`);
  })
  .catch(error => {
    if (error.message.includes(`–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`)) {
      console.error(`–ú—ñ—Å—Ç–æ "${cityname}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.`);
  
    } else {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –¥–ª—è –º—ñ—Å—Ç–∞ ${cityname}: ${error}`);
    
    }
  });


  
